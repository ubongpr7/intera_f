{
  "swagger": "2.0",
  "info": {
    "title": "Product Service",
    "description": "Test description",
    "termsOfService": "https://www.google.com/policies/terms/",
    "contact": {
      "email": "contact@snippets.local"
    },
    "license": {
      "name": "BSD License"
    },
    "version": "v1"
  },
  "host": "dev.product.destinybuilders.africa",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    }
  },
  "security": [
    {
      "Basic": []
    }
  ],
  "paths": {
    "/mcp_server/mcp": {
      "get": {
        "operationId": "mcp_server_mcp_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "mcp_server"
        ]
      },
      "post": {
        "operationId": "mcp_server_mcp_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "mcp_server"
        ]
      },
      "delete": {
        "operationId": "mcp_server_mcp_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mcp_server"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/pos-configuration/": {
      "get": {
        "operationId": "mcp_urls_pos-configuration_read",
        "summary": "**Tool Name**: Get or Update POS Configuration",
        "description": "**Description**:\nRetrieves or updates the Point-of-Sale (POS) configuration for a specific profile.\nThis configuration includes settings for tax, stock, barcodes, receipts, discounts, and display.\nIf a configuration for the given profile does not exist, it will be created with default values.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"get POS settings\", \"show POS configuration\",\n  \"update POS tax rate\", \"change receipt header\", or \"enable quick sale\".\n- The `profile` ID must be provided in the URL path to identify the specific configuration.\n- For updates, send only the fields that need to be changed in the request body.\n\n**Input Parameters**:\n- `profile_id` (Path Parameter, required): The ID of the profile whose POS configuration is being accessed.\n- Request Body (JSON, optional, for PATCH/PUT): Any of the fields available in the `POSConfiguration` model.\n  Only provide the fields you wish to change.\n    - `default_tax_rate` (decimal, optional): Default tax rate percentage.\n    - `tax_inclusive_pricing` (boolean, optional): Display prices with tax included.\n    - `allow_negative_stock` (boolean, optional): Allow sales when stock is zero.\n    - `show_stock_levels` (boolean, optional): Display stock levels in POS.\n    - `low_stock_warning` (boolean, optional): Show warning for low stock items.\n    - `require_barcode` (boolean, optional): Require barcode for all products.\n    - `auto_generate_barcode` (boolean, optional): Automatically generate barcodes for new products.\n    - `barcode_prefix` (string, optional): Prefix for auto-generated barcodes.\n    - `auto_print_receipt` (boolean, optional): Auto print receipt.\n    - `receipt_header` (string, optional): Custom header text for receipts.\n    - `receipt_footer` (string, optional): Custom footer text for receipts.\n    - `allow_item_discount` (boolean, optional): Allow discounts on individual items.\n    - `allow_transaction_discount` (boolean, optional): Allow discounts on entire transaction.\n    - `max_discount_without_approval` (decimal, optional): Max discount percentage without manager approval.\n    - `products_per_page` (integer, optional): Number of products to display per page in POS.\n    - `show_product_images` (boolean, optional): Display product images in POS.\n    - `default_view` (string, optional): Default view (grid/list).\n    - `enable_quick_sale` (boolean, optional): Enable quick sale buttons.\n    - `quick_sale_categories` (string, optional): Comma-separated list of categories for quick sale.\n    - `cash_rounding` (decimal, optional): Round cash payments to nearest amount.\n    - `enable_loyalty` (boolean, optional): Enable loyalty program.\n    - `loyalty_points_rate` (decimal, optional): Points earned per currency unit spent.\n    - `created_by` (string, required for creation, optional for update): User ID of the creator.\n\n**Output**:\nA JSON object containing the detailed POS configuration for the specified profile.\nIncludes `next_barcode` field for the next available barcode based on configuration.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "put": {
        "operationId": "mcp_urls_pos-configuration_update",
        "summary": "**Tool Name**: Get or Update POS Configuration",
        "description": "**Description**:\nRetrieves or updates the Point-of-Sale (POS) configuration for a specific profile.\nThis configuration includes settings for tax, stock, barcodes, receipts, discounts, and display.\nIf a configuration for the given profile does not exist, it will be created with default values.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"get POS settings\", \"show POS configuration\",\n  \"update POS tax rate\", \"change receipt header\", or \"enable quick sale\".\n- The `profile` ID must be provided in the URL path to identify the specific configuration.\n- For updates, send only the fields that need to be changed in the request body.\n\n**Input Parameters**:\n- `profile_id` (Path Parameter, required): The ID of the profile whose POS configuration is being accessed.\n- Request Body (JSON, optional, for PATCH/PUT): Any of the fields available in the `POSConfiguration` model.\n  Only provide the fields you wish to change.\n    - `default_tax_rate` (decimal, optional): Default tax rate percentage.\n    - `tax_inclusive_pricing` (boolean, optional): Display prices with tax included.\n    - `allow_negative_stock` (boolean, optional): Allow sales when stock is zero.\n    - `show_stock_levels` (boolean, optional): Display stock levels in POS.\n    - `low_stock_warning` (boolean, optional): Show warning for low stock items.\n    - `require_barcode` (boolean, optional): Require barcode for all products.\n    - `auto_generate_barcode` (boolean, optional): Automatically generate barcodes for new products.\n    - `barcode_prefix` (string, optional): Prefix for auto-generated barcodes.\n    - `auto_print_receipt` (boolean, optional): Auto print receipt.\n    - `receipt_header` (string, optional): Custom header text for receipts.\n    - `receipt_footer` (string, optional): Custom footer text for receipts.\n    - `allow_item_discount` (boolean, optional): Allow discounts on individual items.\n    - `allow_transaction_discount` (boolean, optional): Allow discounts on entire transaction.\n    - `max_discount_without_approval` (decimal, optional): Max discount percentage without manager approval.\n    - `products_per_page` (integer, optional): Number of products to display per page in POS.\n    - `show_product_images` (boolean, optional): Display product images in POS.\n    - `default_view` (string, optional): Default view (grid/list).\n    - `enable_quick_sale` (boolean, optional): Enable quick sale buttons.\n    - `quick_sale_categories` (string, optional): Comma-separated list of categories for quick sale.\n    - `cash_rounding` (decimal, optional): Round cash payments to nearest amount.\n    - `enable_loyalty` (boolean, optional): Enable loyalty program.\n    - `loyalty_points_rate` (decimal, optional): Points earned per currency unit spent.\n    - `created_by` (string, required for creation, optional for update): User ID of the creator.\n\n**Output**:\nA JSON object containing the detailed POS configuration for the specified profile.\nIncludes `next_barcode` field for the next available barcode based on configuration.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "patch": {
        "operationId": "mcp_urls_pos-configuration_partial_update",
        "summary": "**Tool Name**: Get or Update POS Configuration",
        "description": "**Description**:\nRetrieves or updates the Point-of-Sale (POS) configuration for a specific profile.\nThis configuration includes settings for tax, stock, barcodes, receipts, discounts, and display.\nIf a configuration for the given profile does not exist, it will be created with default values.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"get POS settings\", \"show POS configuration\",\n  \"update POS tax rate\", \"change receipt header\", or \"enable quick sale\".\n- The `profile` ID must be provided in the URL path to identify the specific configuration.\n- For updates, send only the fields that need to be changed in the request body.\n\n**Input Parameters**:\n- `profile_id` (Path Parameter, required): The ID of the profile whose POS configuration is being accessed.\n- Request Body (JSON, optional, for PATCH/PUT): Any of the fields available in the `POSConfiguration` model.\n  Only provide the fields you wish to change.\n    - `default_tax_rate` (decimal, optional): Default tax rate percentage.\n    - `tax_inclusive_pricing` (boolean, optional): Display prices with tax included.\n    - `allow_negative_stock` (boolean, optional): Allow sales when stock is zero.\n    - `show_stock_levels` (boolean, optional): Display stock levels in POS.\n    - `low_stock_warning` (boolean, optional): Show warning for low stock items.\n    - `require_barcode` (boolean, optional): Require barcode for all products.\n    - `auto_generate_barcode` (boolean, optional): Automatically generate barcodes for new products.\n    - `barcode_prefix` (string, optional): Prefix for auto-generated barcodes.\n    - `auto_print_receipt` (boolean, optional): Auto print receipt.\n    - `receipt_header` (string, optional): Custom header text for receipts.\n    - `receipt_footer` (string, optional): Custom footer text for receipts.\n    - `allow_item_discount` (boolean, optional): Allow discounts on individual items.\n    - `allow_transaction_discount` (boolean, optional): Allow discounts on entire transaction.\n    - `max_discount_without_approval` (decimal, optional): Max discount percentage without manager approval.\n    - `products_per_page` (integer, optional): Number of products to display per page in POS.\n    - `show_product_images` (boolean, optional): Display product images in POS.\n    - `default_view` (string, optional): Default view (grid/list).\n    - `enable_quick_sale` (boolean, optional): Enable quick sale buttons.\n    - `quick_sale_categories` (string, optional): Comma-separated list of categories for quick sale.\n    - `cash_rounding` (decimal, optional): Round cash payments to nearest amount.\n    - `enable_loyalty` (boolean, optional): Enable loyalty program.\n    - `loyalty_points_rate` (decimal, optional): Points earned per currency unit spent.\n    - `created_by` (string, required for creation, optional for update): User ID of the creator.\n\n**Output**:\nA JSON object containing the detailed POS configuration for the specified profile.\nIncludes `next_barcode` field for the next available barcode based on configuration.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/pos-products/": {
      "get": {
        "operationId": "mcp_urls_pos-products_list",
        "summary": "**Tool Name**: List POS Products",
        "description": "**Description**:\nRetrieves a paginated list of products optimized for Point-of-Sale (POS) systems.\nThis tool is ideal for fetching products that are active and available for quick sale.\nIt supports filtering by POS category, general product category, and a general search query.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"list products for POS\", \"show available products\",\n  \"find products by POS category\", \"get products by general category\", or \"search for products\".\n- If the user specifies a POS category, use the `pos_category` query parameter.\n- If the user specifies a general product category, use the `category` query parameter.\n- For general keyword search across product name, description, barcode, SKU, and categories,\n  use the `search` query parameter.\n- The response will include essential product details like display name, price,\n  stock quantity, barcode, SKU, and main image.\n\n**Input Parameters**:\n- `pos_category` (Query Parameter, optional): Filter products by their POS display category (e.g., \"Drinks\", \"Snacks\").\n- `category` (Query Parameter, optional): Filter products by their general product category (e.g., \"Electronics\", \"Apparel\").\n- `search` (Query Parameter, optional): A keyword to search across product name, description, barcode, SKU, and categories.\n- `page` (Query Parameter, optional): The page number to retrieve for pagination.\n- `page_size` (Query Parameter, optional): The number of items per page.\n\n**Output**:\nA JSON object containing a list of POS-optimized product data, including pagination metadata.\nEach product entry will contain:\n- `id`: Unique identifier of the product.\n- `name`: Product's primary name.\n- `display_name`: Formatted name for POS display.\n- `base_price`: The product's base selling price.\n- `pos_price`: The calculated price for POS, considering tax and discounts.\n- `barcode`: Product's primary barcode.\n- `sku`: Stock Keeping Unit.\n- `stock_quantity`: Total available stock quantity across all active variants.\n- `can_sell`: Boolean indicating if the product can be sold (considering stock and backorder settings).\n- `profit_margin`: Calculated profit margin percentage.\n- `featured_variant`: Details of a featured variant, if available.\n- `main_image`: URL of the product's main image.\n- `category_info`: Basic information about the product's category.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSProduct"
              }
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/pricing-rules/": {
      "get": {
        "operationId": "mcp_urls_pricing-rules_list",
        "summary": "**Tool Name**: List Pricing Rules",
        "description": "**Description**:\nRetrieves a paginated list of pricing rules (e.g., promotions, volume discounts, customer-specific pricing).\nThese rules apply discounts or special pricing based on various conditions.\nSupports filtering by rule type, active status, product, variant, and category.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"list pricing rules\", \"show all discounts\",\n  \"find promotions\", or \"get rules for product X\".\n- Use `rule_type` query parameter to filter by type (e.g., \"PROMO\", \"VOLUME\").\n- Use `is_active` (boolean) to filter by active status.\n- Use `product_id`, `variant_id`, or `category` to filter by target.\n\n**Input Parameters**:\n- `rule_type` (Query Parameter, optional): Filter by rule type (choices: \"BATCH\", \"CUSTOMER\", \"CUSTOMER_GROUP\", \"PROMO\", \"VOLUME\", \"SEASONAL\", \"CLEARANCE\", \"LOYALTY\", \"BUNDLE\").\n- `is_active` (Query Parameter, optional): Filter by active status (true/false).\n- `product_id` (Query Parameter, optional): Filter rules applied to a specific product.\n- `variant_id` (Query Parameter, optional): Filter rules applied to a specific variant.\n- `category` (Query Parameter, optional): Filter rules applied to a specific category.\n- `page` (Query Parameter, optional): The page number to retrieve.\n- `page_size` (Query Parameter, optional): The number of items per page.\n\n**Output**:\nA JSON object containing a list of pricing rule data, including pagination metadata.\nEach rule entry will contain:\n- `id`: Unique identifier.\n- `name`: Rule name.\n- `rule_type`: Type of rule.\n- `product_details`, `variant_details`: Details of the target product/variant.\n- `category`: Target category.\n- `discount_type`, `value`: Discount details.\n- `start_date`, `end_date`: Validity period.\n- `min_quantity`, `max_quantity`, `min_amount`: Quantity/amount conditions.\n- `is_active_now`: Boolean indicating if the rule is currently active.\n- `usage_percentage`: Percentage of usage limit consumed.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PricingRule"
              }
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/pricing-rules/create/": {
      "post": {
        "operationId": "mcp_urls_pricing-rules_create_create",
        "summary": "**Tool Name**: Create Pricing Rule",
        "description": "**Description**:\nCreates a new pricing rule to apply discounts or special pricing.\nRules can be time-limited, quantity-based, customer-specific, or for specific products/variants/categories.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"create a new discount rule\", \"set up a promotion\",\n  \"add a volume discount\", or \"define a customer-specific price\".\n- Ensure `name`, `rule_type`, `discount_type`, and `value` are provided.\n- At least one target (`product`, `variant`, or `category`) must be specified.\n- For 'PROMO' rules, `start_date` and `end_date` are required.\n- Provide `created_by` (user ID).\n\n**Input Parameters**:\n- Request Body (JSON, required):\n    - `name` (string, required): Descriptive name for this pricing rule.\n    - `rule_type` (string, required): Type of rule (choices: \"BATCH\", \"CUSTOMER\", \"CUSTOMER_GROUP\", \"PROMO\", \"VOLUME\", \"SEASONAL\", \"CLEARANCE\", \"LOYALTY\", \"BUNDLE\").\n    - `discount_type` (string, required): Type of discount (choices: \"PERCENTAGE\", \"FIXED_AMOUNT\", \"FIXED_PRICE\").\n    - `value` (decimal, required): The discount value.\n    - `product` (string, optional): ID of the target product.\n    - `variant` (string, optional): ID of the target variant.\n    - `category` (string, optional): Target category name.\n    - `start_date` (datetime, optional): Start date/time for the rule's validity.\n    - `end_date` (datetime, optional): End date/time for the rule's validity.\n    - `min_quantity` (integer, optional): Minimum quantity for the rule to apply.\n    - `max_quantity` (integer, optional): Maximum quantity for the rule to apply.\n    - `min_amount` (decimal, optional): Minimum total amount for the rule to apply.\n    - `customer_groups` (string, optional): Comma-separated list of customer group IDs.\n    - `specific_customers` (string, optional): Comma-separated list of specific customer IDs.\n    - `usage_limit` (integer, optional): Maximum number of times this rule can be used.\n    - `usage_limit_per_customer` (integer, optional): Maximum usage per customer.\n    - `is_active` (boolean, optional, default: `true`): Active status.\n    - `priority` (integer, optional, default: `0`): Higher numbers have higher priority.\n    - `description` (string, optional): Detailed description of the rule.\n    - `created_by` (string, required): User ID of the creator.\n\n**Output**:\nA JSON object representing the newly created pricing rule.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/pricing-rules/{id}/": {
      "get": {
        "operationId": "mcp_urls_pricing-rules_read",
        "summary": "**Tool Name**: Retrieve Pricing Rule",
        "description": "**Description**:\nRetrieves the detailed information for a single pricing rule by its unique ID.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"get pricing rule details for ID X\", \"show rule Y\",\n  or \"retrieve specific discount Z\".\n- The rule's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the pricing rule to retrieve.\n\n**Output**:\nA JSON object containing the detailed information of the requested pricing rule.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Rule.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/pricing-rules/{id}/delete/": {
      "delete": {
        "operationId": "mcp_urls_pricing-rules_delete_delete",
        "summary": "**Tool Name**: Delete Pricing Rule",
        "description": "**Description**:\nDeletes an existing pricing rule from the system. This operation is irreversible.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user explicitly asks to \"delete pricing rule X\", \"remove rule Y\",\n  or \"permanently erase discount Z\".\n- **CRITICAL**: Always confirm with the user before performing this action, as it is destructive.\n- The rule's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the pricing rule to delete.\n\n**Output**:\nAn empty HTTP 204 No Content response upon successful deletion.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Rule.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/pricing-rules/{id}/update/": {
      "put": {
        "operationId": "mcp_urls_pricing-rules_update_update",
        "summary": "**Tool Name**: Update Pricing Rule",
        "description": "**Description**:\nUpdates an existing pricing rule's information. Supports partial updates.\nYou can modify its name, discount value, dates, or conditions.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update pricing rule X\", \"change discount Y's value\",\n  or \"extend promotion Z\".\n- The rule's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the pricing rule to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Pricing Rule` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated pricing rule.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "patch": {
        "operationId": "mcp_urls_pricing-rules_update_partial_update",
        "summary": "**Tool Name**: Update Pricing Rule",
        "description": "**Description**:\nUpdates an existing pricing rule's information. Supports partial updates.\nYou can modify its name, discount value, dates, or conditions.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update pricing rule X\", \"change discount Y's value\",\n  or \"extend promotion Z\".\n- The rule's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the pricing rule to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Pricing Rule` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated pricing rule.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Rule.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/pricing-strategies/": {
      "get": {
        "operationId": "mcp_urls_pricing-strategies_list",
        "summary": "**Tool Name**: List Pricing Strategies",
        "description": "**Description**:\nRetrieves a paginated list of pricing strategies defined in the system.\nPricing strategies determine how a product's selling price is calculated (e.g., Cost-Plus Margin, Fixed Price).\nSupports filtering by strategy type and active status.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"list pricing strategies\", \"show all pricing rules\",\n  \"find strategies by type\", or \"get active pricing strategies\".\n- Use `strategy` query parameter to filter by strategy type (e.g., \"margin\", \"fixed\").\n- Use `is_active` (boolean) query parameter to filter by active status.\n\n**Input Parameters**:\n- `strategy` (Query Parameter, optional): Filter by strategy type (choices: \"margin\", \"multiplier\", \"fixed\", \"dynamic\", \"tiered\").\n- `is_active` (Query Parameter, optional): Filter by active status (true/false).\n- `page` (Query Parameter, optional): The page number to retrieve.\n- `page_size` (Query Parameter, optional): The number of items per page.\n\n**Output**:\nA JSON object containing a list of pricing strategy data, including pagination metadata.\nEach strategy entry will contain:\n- `id`: Unique identifier.\n- `name`: Strategy name.\n- `strategy`: Type of strategy.\n- `margin_percentage`: Margin for cost-plus.\n- `market_multiplier`: Multiplier for market-based.\n- `min_price`, `max_price`: Price constraints.\n- `demand_factor`, `seasonal_factor`: Factors for dynamic pricing.\n- `tier_X_quantity`, `tier_X_discount`: Tiers for tiered pricing.\n- `is_active`: Active status.\n- `calculated_price_example`: An example price calculated with a base cost of 100.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PricingStrategy"
              }
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/pricing-strategies/create/": {
      "post": {
        "operationId": "mcp_urls_pricing-strategies_create_create",
        "summary": "**Tool Name**: Create Pricing Strategy",
        "description": "**Description**:\nCreates a new pricing strategy. This defines how a product's selling price will be calculated.\nDifferent strategies require different parameters (e.g., `margin_percentage` for 'margin' strategy).\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"create a new pricing strategy\", \"define a price calculation rule\",\n  or \"set up a new margin rule\".\n- Ensure `name` and `strategy` are provided.\n- Provide relevant fields based on the chosen `strategy` type.\n\n**Input Parameters**:\n- Request Body (JSON, required):\n    - `name` (string, required): Descriptive name for this pricing strategy.\n    - `strategy` (string, required): The type of pricing strategy (choices: \"margin\", \"multiplier\", \"fixed\", \"dynamic\", \"tiered\").\n    - `product` (string, optional): ID of the product this strategy applies to (if one-to-one).\n    - `margin_percentage` (decimal, optional): Markup percentage for 'margin' strategy.\n    - `market_multiplier` (decimal, optional): Multiplier for 'multiplier' strategy.\n    - `min_price` (decimal, optional): Price floor for automatic calculations.\n    - `max_price` (decimal, optional): Price ceiling for automatic calculations.\n    - `demand_factor` (decimal, optional, default: `1.0`): Multiplier based on demand for 'dynamic' strategy.\n    - `seasonal_factor` (decimal, optional, default: `1.0`): Seasonal price adjustment for 'dynamic' strategy.\n    - `tier_1_quantity`, `tier_2_quantity`, `tier_3_quantity` (integer, optional): Quantities for tiered pricing.\n    - `tier_1_discount`, `tier_2_discount`, `tier_3_discount` (decimal, optional): Discount percentages for tiered pricing.\n    - `is_active` (boolean, optional, default: `true`): Active status.\n\n**Output**:\nA JSON object representing the newly created pricing strategy.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/pricing-strategies/{id}/": {
      "get": {
        "operationId": "mcp_urls_pricing-strategies_read",
        "summary": "**Tool Name**: Retrieve Pricing Strategy",
        "description": "**Description**:\nRetrieves the detailed information for a single pricing strategy by its unique ID.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"get pricing strategy details for ID X\", \"show strategy Y\",\n  or \"retrieve price calculation rule Z\".\n- The strategy's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the pricing strategy to retrieve.\n\n**Output**:\nA JSON object containing the detailed information of the requested pricing strategy.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Strategy.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/pricing-strategies/{id}/delete/": {
      "delete": {
        "operationId": "mcp_urls_pricing-strategies_delete_delete",
        "summary": "**Tool Name**: Delete Pricing Strategy",
        "description": "**Description**:\nDeletes an existing pricing strategy from the system. This operation is irreversible.\nAny products linked to this strategy will no longer have it applied.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user explicitly asks to \"delete pricing strategy X\", \"remove strategy Y\",\n  or \"permanently erase pricing rule Z\".\n- **CRITICAL**: Always confirm with the user before performing this action, as it is destructive.\n- The strategy's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the pricing strategy to delete.\n\n**Output**:\nAn empty HTTP 204 No Content response upon successful deletion.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Strategy.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/pricing-strategies/{id}/update/": {
      "put": {
        "operationId": "mcp_urls_pricing-strategies_update_update",
        "summary": "**Tool Name**: Update Pricing Strategy",
        "description": "**Description**:\nUpdates an existing pricing strategy's information. Supports partial updates.\nYou can modify its name, strategy type, or specific parameters like margin or multiplier.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update pricing strategy X\", \"change strategy Y's margin\",\n  or \"deactivate strategy Z\".\n- The strategy's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the pricing strategy to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Pricing Strategy` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated pricing strategy.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "patch": {
        "operationId": "mcp_urls_pricing-strategies_update_partial_update",
        "summary": "**Tool Name**: Update Pricing Strategy",
        "description": "**Description**:\nUpdates an existing pricing strategy's information. Supports partial updates.\nYou can modify its name, strategy type, or specific parameters like margin or multiplier.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update pricing strategy X\", \"change strategy Y's margin\",\n  or \"deactivate strategy Z\".\n- The strategy's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the pricing strategy to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Pricing Strategy` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated pricing strategy.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Strategy.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/product-attribute-values/": {
      "get": {
        "operationId": "mcp_urls_product-attribute-values_list",
        "summary": "**Tool Name**: List Product Attribute Values",
        "description": "**Description**:\nRetrieves a paginated list of specific values for product attributes (e.g., \"Red\" for \"Color\", \"Small\" for \"Size\").\nSupports filtering by the parent attribute ID and active status.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"list attribute values\", \"show values for attribute X\",\n  or \"get all colors\".\n- Use `attribute_id` query parameter to filter values for a specific attribute.\n- Use `is_active` (boolean) query parameter to filter by active status.\n\n**Input Parameters**:\n- `attribute_id` (Query Parameter, required): The ID of the parent `ProductAttribute` to filter values for.\n- `is_active` (Query Parameter, optional): Filter by active status (true/false).\n- `page` (Query Parameter, optional): The page number to retrieve.\n- `page_size` (Query Parameter, optional): The number of items per page.\n\n**Output**:\nA JSON object containing a list of product attribute value data, including pagination metadata.\nEach value entry will contain:\n- `id`: Unique identifier.\n- `attribute`: ID of the parent attribute.\n- `attribute_name`: Name of the parent attribute.\n- `attribute_type`: Type of the parent attribute.\n- `value`: The raw value (e.g., \"Red\").\n- `display_value`: An optional display-friendly value.\n- `effective_display_value`: The value used for display (display_value or raw value).\n- `color_code`: Hex color code for color attributes.\n- `is_active`: Active status.\n- `sort_order`: Order for display.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductAttributeValue"
              }
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/product-attribute-values/create/": {
      "post": {
        "operationId": "mcp_urls_product-attribute-values_create_create",
        "summary": "**Tool Name**: Create Product Attribute Value",
        "description": "**Description**:\nCreates a new specific value for an existing product attribute (e.g., \"Blue\" for \"Color\").\nEnsures uniqueness for the attribute-value pair.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"add a value to attribute X\", \"create a new color option\",\n  or \"define a new size\".\n- Provide the `attribute` ID and the `value`.\n- For color attributes, include `color_code`.\n\n**Input Parameters**:\n- Request Body (JSON, required):\n    - `attribute` (string, required): The ID of the `ProductAttribute` this value belongs to.\n    - `value` (string, required): The raw value (e.g., \"Red\", \"XL\").\n    - `display_value` (string, optional): An optional display-friendly value.\n    - `color_code` (string, optional): Hex color code (e.g., \"#FF0000\") for color attributes.\n    - `is_active` (boolean, optional, default: `true`): Active status.\n    - `sort_order` (integer, optional, default: `0`): Order for display.\n\n**Output**:\nA JSON object representing the newly created product attribute value.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/product-attribute-values/{id}/": {
      "get": {
        "operationId": "mcp_urls_product-attribute-values_read",
        "summary": "**Tool Name**: Retrieve Product Attribute Value",
        "description": "**Description**:\nRetrieves the detailed information for a single product attribute value by its unique ID.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"get attribute value details for ID X\", \"show value Y\",\n  or \"retrieve specific color Z\".\n- The attribute value's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product attribute value to retrieve.\n\n**Output**:\nA JSON object containing the detailed information of the requested product attribute value.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Attribute Value.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/product-attribute-values/{id}/delete/": {
      "delete": {
        "operationId": "mcp_urls_product-attribute-values_delete_delete",
        "summary": "**Tool Name**: Delete Product Attribute Value",
        "description": "**Description**:\nDeletes a specific value for a product attribute. This operation is irreversible and will\naffect any product variants that use this value.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user explicitly asks to \"delete attribute value X\", \"remove color Y\",\n  or \"permanently erase size Z option\".\n- **CRITICAL**: Always confirm with the user before performing this action, as it is destructive.\n- The attribute value's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product attribute value to delete.\n\n**Output**:\nAn empty HTTP 204 No Content response upon successful deletion.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Attribute Value.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/product-attribute-values/{id}/update/": {
      "put": {
        "operationId": "mcp_urls_product-attribute-values_update_update",
        "summary": "**Tool Name**: Update Product Attribute Value",
        "description": "**Description**:\nUpdates an existing product attribute value's information. Supports partial updates.\nYou can modify its display value, color code, or active status.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update attribute value X\", \"change color Y's code\",\n  or \"deactivate size Z\".\n- The attribute value's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product attribute value to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Product Attribute Value` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated product attribute value.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "patch": {
        "operationId": "mcp_urls_product-attribute-values_update_partial_update",
        "summary": "**Tool Name**: Update Product Attribute Value",
        "description": "**Description**:\nUpdates an existing product attribute value's information. Supports partial updates.\nYou can modify its display value, color code, or active status.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update attribute value X\", \"change color Y's code\",\n  or \"deactivate size Z\".\n- The attribute value's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product attribute value to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Product Attribute Value` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated product attribute value.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Attribute Value.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/product-attributes/": {
      "get": {
        "operationId": "mcp_urls_product-attributes_list",
        "summary": "**Tool Name**: List Product Attributes",
        "description": "**Description**:\nRetrieves a paginated list of universal product attributes (e.g., Color, Size).\nThese attributes are used to define product characteristics and create variants.\nSupports filtering by attribute type and whether it's a variant attribute.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"list product attributes\", \"show all attributes\",\n  \"find attributes by type\", or \"get variant attributes\".\n- Use `attribute_type` query parameter to filter by type (e.g., \"COLOR\", \"SIZE\").\n- Use `is_variant_attribute` (boolean) query parameter to filter attributes used for variants.\n\n**Input Parameters**:\n- `attribute_type` (Query Parameter, optional): Filter by attribute type (e.g., \"TEXT\", \"COLOR\").\n- `is_variant_attribute` (Query Parameter, optional): Filter by whether the attribute is used for variants (true/false).\n- `page` (Query Parameter, optional): The page number to retrieve.\n- `page_size` (Query Parameter, optional): The number of items per page.\n\n**Output**:\nA JSON object containing a list of product attribute data, including pagination metadata.\nEach attribute entry will contain:\n- `id`: Unique identifier.\n- `name`: Attribute name (e.g., \"Color\").\n- `attribute_type`: Type of attribute (e.g., \"COLOR\", \"TEXT\").\n- `is_required`: If the attribute is required for products.\n- `is_variant_attribute`: If the attribute is used to create variants.\n- `display_order`: Order for display.\n- `unit`: Unit of measurement (e.g., \"cm\").\n- `values_count`: Number of associated attribute values.\n- `values`: List of associated attribute values.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductAttribute"
              }
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/product-attributes/create/": {
      "post": {
        "operationId": "mcp_urls_product-attributes_create_create",
        "summary": "**Tool Name**: Create Product Attribute",
        "description": "**Description**:\nCreates a new universal product attribute. These attributes define characteristics\nlike \"Color\", \"Size\", \"Material\", etc., which can be linked to products and variants.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"create a new attribute\", \"add a product characteristic\",\n  or \"define a new product property\".\n- Ensure the `name` and `attribute_type` are provided.\n- `name` must be unique globally.\n\n**Input Parameters**:\n- Request Body (JSON, required):\n    - `name` (string, required): The unique name of the attribute (e.g., \"Color\", \"Size\").\n    - `attribute_type` (string, required): The type of data this attribute holds (choices: \"TEXT\", \"NUMBER\", \"BOOLEAN\", \"DATE\", \"COLOR\", \"SIZE\", \"WEIGHT\", \"DIMENSION\").\n    - `is_required` (boolean, optional, default: `false`): If this attribute is required for all products.\n    - `is_variant_attribute` (boolean, optional, default: `true`): If this attribute is used to create product variants.\n    - `display_order` (integer, optional, default: `0`): Order for display in UI.\n    - `unit` (string, optional): Unit of measurement if applicable (e.g., \"cm\", \"kg\").\n    - `description` (string, optional): Detailed description of the attribute.\n    - `category_tags` (string, optional): Comma-separated tags for categorizing attributes.\n\n**Output**:\nA JSON object representing the newly created product attribute.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/product-attributes/{id}/": {
      "get": {
        "operationId": "mcp_urls_product-attributes_read",
        "summary": "**Tool Name**: Retrieve Product Attribute",
        "description": "**Description**:\nRetrieves the detailed information for a single universal product attribute by its unique ID.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"get attribute details for ID X\", \"show attribute Y\",\n  or \"retrieve product characteristic Z\".\n- The attribute's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product attribute to retrieve.\n\n**Output**:\nA JSON object containing the detailed information of the requested product attribute,\nincluding its associated values.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Product Attribute.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/product-attributes/{id}/delete/": {
      "delete": {
        "operationId": "mcp_urls_product-attributes_delete_delete",
        "summary": "**Tool Name**: Delete Product Attribute",
        "description": "**Description**:\nDeletes a universal product attribute. This operation is irreversible and will\naffect any products or variants linked to this attribute.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user explicitly asks to \"delete attribute X\", \"remove attribute Y\",\n  or \"permanently erase attribute Z\".\n- **CRITICAL**: Always confirm with the user before performing this action, as it is destructive.\n- The attribute's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product attribute to delete.\n\n**Output**:\nAn empty HTTP 204 No Content response upon successful deletion.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Product Attribute.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/product-attributes/{id}/update/": {
      "put": {
        "operationId": "mcp_urls_product-attributes_update_update",
        "summary": "**Tool Name**: Update Product Attribute",
        "description": "**Description**:\nUpdates an existing universal product attribute's information. Supports partial updates.\nYou can modify its name, type, display order, etc.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update attribute X\", \"change attribute Y's type\",\n  or \"modify attribute Z's description\".\n- The attribute's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product attribute to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Product Attribute` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated product attribute.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "patch": {
        "operationId": "mcp_urls_product-attributes_update_partial_update",
        "summary": "**Tool Name**: Update Product Attribute",
        "description": "**Description**:\nUpdates an existing universal product attribute's information. Supports partial updates.\nYou can modify its name, type, display order, etc.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update attribute X\", \"change attribute Y's type\",\n  or \"modify attribute Z's description\".\n- The attribute's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product attribute to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Product Attribute` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated product attribute.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Product Attribute.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mcp_urls/product-variants/": {
      "get": {
        "operationId": "mcp_urls_product-variants_list",
        "summary": "**Tool Name**: List Product Variants",
        "description": "**Description**:\nRetrieves a paginated list of product variants. Variants represent specific versions\nof a product based on attributes (e.g., \"Red Large T-Shirt\").\nSupports filtering by parent product, active status, and POS visibility.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"list variants for product X\", \"show all active variants\",\n  or \"get POS visible variants\".\n- Use `product_id` query parameter to filter variants for a specific product.\n- Use `active` (boolean) to filter by active status.\n- Use `pos_visible` (boolean) to filter by POS visibility.\n\n**Input Parameters**:\n- `product_id` (Query Parameter, optional): The ID of the parent `Product` to filter variants for.\n- `active` (Query Parameter, optional): Filter by active status (true/false).\n- `pos_visible` (Query Parameter, optional): Filter by POS visibility (true/false).\n- `page` (Query Parameter, optional): The page number to retrieve.\n- `page_size` (Query Parameter, optional): The number of items per page.\n\n**Output**:\nA JSON object containing a list of product variant data, including pagination metadata.\nEach variant entry will contain:\n- `id`: Unique identifier.\n- `product`: ID of the parent product.\n- `product_name`: Name of the parent product.\n- `display_name`: Formatted name for POS display.\n- `effective_barcode`: The most specific barcode for this variant.\n- `sku`: Stock Keeping Unit for this variant.\n- `selling_price`: The calculated selling price.\n- `pos_price`: The calculated POS price.\n- `active`: Active status.\n- `pos_visible`: POS visibility status.\n- `is_featured`: Featured status.\n- `stock_info`: Current stock quantity and availability.\n- `attributes_display`: Formatted list of attributes and their values.\n- `main_image`: URL of the variant's main image.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSVariant"
              }
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/product-variants/create/": {
      "post": {
        "operationId": "mcp_urls_product-variants_create_create",
        "summary": "**Tool Name**: Create Product Variant",
        "description": "**Description**:\nCreates a new product variant for an existing product. This allows defining specific\nattributes, pricing overrides, and stock settings for a particular variation.\nThe `product` ID must be provided in the request body.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"create a new variant for product X\", \"add a size option\",\n  or \"define a new color variant\".\n- Ensure the `product` ID is provided.\n- If `variant_barcode` or `variant_sku` are not provided, they will be auto-generated.\n- To link attributes, you'll need to use the `ProductVariantAttributeCreateAPIView` after creating the variant.\n\n**Input Parameters**:\n- Request Body (JSON, required):\n    - `product` (string, required): The ID of the parent `Product`.\n    - `variant_barcode` (string, optional): Specific barcode for this variant (auto-generated if not provided).\n    - `variant_sku` (string, optional): Specific SKU for this variant (auto-generated if not provided).\n    - `pos_name` (string, optional): Custom name for POS display.\n    - `active` (boolean, optional, default: `true`): Available for sale.\n    - `is_featured` (boolean, optional, default: `false`): Mark as featured.\n    - `pos_visible` (boolean, optional, default: `true`): Show in POS interface.\n    - `price_override` (decimal, optional): Override product base price for this variant.\n    - `cost_override` (decimal, optional): Override product cost price for this variant.\n    - `weight_override` (decimal, optional): Override product weight for this variant.\n    - `dimensions_override` (string, optional): Override product dimensions for this variant.\n    - `track_stock_override` (boolean, optional): Override product stock tracking setting.\n    - `low_stock_threshold_override` (integer, optional): Override product low stock threshold.\n    - `created_by` (string, required): The ID of the user creating the variant.\n\n**Output**:\nA JSON object representing the newly created product variant.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/product-variants/{id}/": {
      "get": {
        "operationId": "mcp_urls_product-variants_read",
        "summary": "**Tool Name**: Retrieve Product Variant",
        "description": "**Description**:\nRetrieves the detailed information for a single product variant by its unique ID.\nIncludes all associated attachments, stock details, and attribute details.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"get variant details for ID X\", \"show variant Y\",\n  or \"retrieve specific T-shirt size Z\".\n- The variant's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product variant to retrieve.\n\n**Output**:\nA JSON object containing the detailed information of the requested product variant.\nIncludes fields like:\n- `id`, `product`, `variant_barcode`, `variant_sku`, `pos_name`, `selling_price`, `pos_price`.\n- `attachments`: List of associated image/file attachments.\n- `main_image`: URL of the primary image.\n- `stock_details`: Detailed stock information from Inventory Service.\n- `attribute_details`: List of linked attributes and their values.\n- `effective_properties`: Calculated effective weight, dimensions, cost, etc.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mcp_urls/product-variants/{id}/delete/": {
      "delete": {
        "operationId": "mcp_urls_product-variants_delete_delete",
        "summary": "**Tool Name**: Delete Product Variant",
        "description": "**Description**:\nDeletes an existing product variant from the system. This operation is irreversible.\nAssociated data like stock records might also be affected.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user explicitly asks to \"delete variant X\", \"remove variant Y\",\n  or \"permanently erase variant Z\".\n- **CRITICAL**: Always confirm with the user before performing this action, as it is destructive.\n- The variant's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product variant to delete.\n\n**Output**:\nAn empty HTTP 204 No Content response upon successful deletion.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mcp_urls/product-variants/{id}/update/": {
      "put": {
        "operationId": "mcp_urls_product-variants_update_update",
        "summary": "**Tool Name**: Update Product Variant",
        "description": "**Description**:\nUpdates an existing product variant's information. Supports partial updates.\nYou can modify its POS name, price overrides, stock settings, or status.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update variant X\", \"change variant Y's price\",\n  or \"deactivate variant Z\".\n- The variant's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product variant to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Product Variant` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated product variant.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "patch": {
        "operationId": "mcp_urls_product-variants_update_partial_update",
        "summary": "**Tool Name**: Update Product Variant",
        "description": "**Description**:\nUpdates an existing product variant's information. Supports partial updates.\nYou can modify its POS name, price overrides, stock settings, or status.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update variant X\", \"change variant Y's price\",\n  or \"deactivate variant Z\".\n- The variant's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product variant to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Product Variant` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated product variant.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mcp_urls/products/create/": {
      "post": {
        "operationId": "mcp_urls_products_create_create",
        "summary": "**Tool Name**: Create Product",
        "description": "**Description**:\nCreates a new product in the system. This tool allows for the definition of core\nproduct information, pricing, POS-specific settings, and physical properties.\nThe `profile` and `created_by` fields must be provided in the request body.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user explicitly asks to \"create a new product\", \"add a product\",\n  or \"register a product\".\n- Ensure all required fields (e.g., `name`, `base_price`,`short_description`) are provided in the request body.\n- If `is_template` is true, the product is intended to have variants.\n\n**Input Parameters**:\n- Request Body (JSON, required):\n    - `name` (string, required): The name of the product.\n    - `base_price` (decimal, required): The default selling price.\n    - `profile` (string, required): The ID of the user's profile to associate the product with.\n    - `inventory` (string, required): ID of the associated inventory which is in the inventory service(you can ask user for the name of the inventory and then use the inventory tool to get the id of the inventory).\n    - `short_description` (string, required): Brief description for listings.\n    - `description` (string, optional): Detailed product description.\n    - `cost_price` (decimal, optional): Average cost price for margin calculations.\n    - `quick_sale` (boolean, optional, default: `false`): Enable for quick POS access.\n    - `pos_category` (string, optional): Category for POS display grouping.\n    - `tax_rate` (decimal, optional, default: `0`): Default tax rate percentage.\n    - `tax_inclusive` (boolean, optional, default: `false`): Is the base price tax inclusive?\n    - `allow_discount` (boolean, optional, default: `true`): Allow discounts in POS.\n    - `max_discount_percent` (decimal, optional, default: `100`): Maximum discount percentage allowed.\n    - `is_template` (boolean, optional, default: `true`): Designates if this product is a template for variants.\n    - `is_active` (boolean, optional, default: `true`): Product availability status.\n    - `is_featured` (boolean, optional, default: `false`): Mark as featured.\n    - `unit` (string, optional): Unit of measure (e.g., \"pcs\", \"kg\").\n    - `weight` (decimal, optional): Weight in kg.\n    - `dimensions` (string, optional): L x W x H in cm.\n    - `category` (string, optional): Product category ID, you can get product categories using tools if you have.\n    - `track_stock` (boolean, optional, default: `true`): Track inventory for this product.\n    - `allow_backorder` (boolean, optional, default: `false`): Allow sales when out of stock.\n    - `low_stock_threshold` (integer, optional, default: `10`): Alert when stock falls below this level.\n    - `meta_title` (string, optional): SEO meta title(generate this by yourself orchestrator).\n    - `meta_description` (string, optional): SEO meta description(generate this by yourself orchestrator).\n\n**Output**:\nA JSON object representing the newly created product, including its `id` and other details.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductCreate"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": []
    },
    "/mcp_urls/products/{id}/": {
      "get": {
        "operationId": "mcp_urls_products_read",
        "summary": "**Tool Name**: Retrieve Product",
        "description": "**Description**:\nRetrieves the detailed information for a single product by its unique ID.\nThis tool provides a comprehensive view of the product, including its pricing strategy,\nvariant counts, stock levels, and associated attributes.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"get product details\", \"show product information for ID X\",\n  or \"retrieve product X\".\n- The product's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product to retrieve.\n\n**Output**:\nA JSON object containing the detailed information of the requested product.\nIncludes fields like:\n- `id`, `name`, `description`, `base_price`, `cost_price`, `barcode`, `sku`.\n- `pricing_strategy_details`: Details of the applied pricing strategy.\n- `display_image`: URL of the product's main display image.\n- `variant_count`: Number of associated product variants.\n- `total_stock`: Aggregate stock quantity across all variants.\n- `profit_margin`: Calculated profit margin.\n- `pos_ready`: Boolean indicating if the product is ready for POS.\n- `attribute_links`: List of linked product attributes.\n- `price_range`: Min/max price across variants.\n- `average_cost`: Average cost price.\n- `low_stock_variants`, `out_of_stock_variants`: Counts of variants in these states.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mcp_urls/products/{id}/delete/": {
      "delete": {
        "operationId": "mcp_urls_products_delete_delete",
        "summary": "**Tool Name**: Delete Product",
        "description": "**Description**:\nDeletes an existing product from the system. This operation is irreversible.\nAssociated variants and related data might also be affected or orphaned depending\non the database's cascade settings.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user explicitly asks to \"delete product X\", \"remove product Y\",\n  or \"permanently erase product Z\".\n- Always confirm with the user before performing this action, as it is destructive.\n- The product's unique ID must be provided in the URL path.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product to delete.\n\n**Output**:\nAn empty HTTP 204 No Content response upon successful deletion.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mcp_urls/products/{id}/update/": {
      "put": {
        "operationId": "mcp_urls_products_update_update",
        "summary": "**Tool Name**: Update Product",
        "description": "**Description**:\nUpdates an existing product's information. This tool supports partial updates,\nmeaning you only need to send the fields that need to be changed.\nIt can modify core product details, pricing, POS settings, and physical properties.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update product X\", \"change the price of product Y\",\n  \"modify product Z's description\", or \"set product A as featured\".\n- The product's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Product` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated product's detailed information.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "patch": {
        "operationId": "mcp_urls_products_update_partial_update",
        "summary": "**Tool Name**: Update Product",
        "description": "**Description**:\nUpdates an existing product's information. This tool supports partial updates,\nmeaning you only need to send the fields that need to be changed.\nIt can modify core product details, pricing, POS settings, and physical properties.\n\n**Usage Instructions for AI Agent**:\n- Use this tool when the user asks to \"update product X\", \"change the price of product Y\",\n  \"modify product Z's description\", or \"set product A as featured\".\n- The product's unique ID must be provided in the URL path.\n- Send only the fields that need to be updated in the request body.\n\n**Input Parameters**:\n- `pk` (Path Parameter, required): The unique ID of the product to update.\n- Request Body (JSON, optional): Any of the fields available in the `Create Product` tool.\n  Only provide the fields you wish to change.\n\n**Output**:\nA JSON object representing the updated product's detailed information.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "mcp_urls"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/analytics/inventory-summary/": {
      "get": {
        "operationId": "product_api_analytics_inventory_summary",
        "description": "Get inventory summary analytics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/analytics/inventory_summary/": {
      "get": {
        "operationId": "product_api_analytics_inventory_summary",
        "description": "Get inventory summary analytics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/analytics/price-trends/": {
      "get": {
        "operationId": "product_api_analytics_price_trends",
        "description": "Get price trend analysis",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/analytics/price_trends/": {
      "get": {
        "operationId": "product_api_analytics_price_trends",
        "description": "Get price trend analysis",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/analytics/stock-alerts/": {
      "get": {
        "operationId": "product_api_analytics_stock_alerts",
        "description": "Get stock alerts and low stock items",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/analytics/stock_alerts/": {
      "get": {
        "operationId": "product_api_analytics_stock_alerts",
        "description": "Get stock alerts and low stock items",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/attachments/": {
      "get": {
        "operationId": "product_api_attachments_list",
        "description": "Attachment management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attachment"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_attachments_create",
        "description": "Attachment management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/attachments/bulk_upload/": {
      "post": {
        "operationId": "product_api_attachments_bulk_upload",
        "description": "Bulk upload attachments",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/attachments/{id}/": {
      "get": {
        "operationId": "product_api_attachments_read",
        "description": "Attachment management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "put": {
        "operationId": "product_api_attachments_update",
        "description": "Attachment management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "patch": {
        "operationId": "product_api_attachments_partial_update",
        "description": "Attachment management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "delete": {
        "operationId": "product_api_attachments_delete",
        "description": "Attachment management",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this attachment.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/attachments/{id}/set_primary/": {
      "post": {
        "operationId": "product_api_attachments_set_primary",
        "description": "Set this attachment as primary",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this attachment.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/attribute-values/": {
      "get": {
        "operationId": "product_api_attribute-values_list",
        "description": "Product attribute value management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductAttributeValue"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_attribute-values_create",
        "description": "Product attribute value management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/attribute-values/{id}/": {
      "get": {
        "operationId": "product_api_attribute-values_read",
        "description": "Product attribute value management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "put": {
        "operationId": "product_api_attribute-values_update",
        "description": "Product attribute value management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "patch": {
        "operationId": "product_api_attribute-values_partial_update",
        "description": "Product attribute value management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "delete": {
        "operationId": "product_api_attribute-values_delete",
        "description": "Product attribute value management",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Attribute Value.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/attribute-values/{id}/toggle_active/": {
      "post": {
        "operationId": "product_api_attribute-values_toggle_active",
        "description": "Toggle active status",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Attribute Value.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/attributes/": {
      "get": {
        "operationId": "product_api_attributes_list",
        "description": "Product attribute management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductAttribute"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_attributes_create",
        "description": "Product attribute management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/attributes/variant_attributes/": {
      "get": {
        "operationId": "product_api_attributes_variant_attributes",
        "description": "Get attributes used for creating variants",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductAttribute"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/attributes/{id}/": {
      "get": {
        "operationId": "product_api_attributes_read",
        "description": "Product attribute management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "put": {
        "operationId": "product_api_attributes_update",
        "description": "Product attribute management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "patch": {
        "operationId": "product_api_attributes_partial_update",
        "description": "Product attribute management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "delete": {
        "operationId": "product_api_attributes_delete",
        "description": "Product attribute management",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Product Attribute.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/attributes/{id}/add_value/": {
      "post": {
        "operationId": "product_api_attributes_add_value",
        "description": "Add a new value to an attribute",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Product Attribute.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/attributes/{id}/values/": {
      "get": {
        "operationId": "product_api_attributes_values",
        "description": "Get all values for an attribute",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Product Attribute.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/bulk/attachments/upload/": {
      "post": {
        "operationId": "product_api_bulk_attachments_bulk_upload",
        "description": "Bulk upload attachments",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/bulk/products/pos-update/": {
      "post": {
        "operationId": "product_api_bulk_products_bulk_pos_update",
        "description": "Bulk update POS settings",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/bulk/products/price-update/": {
      "post": {
        "operationId": "product_api_bulk_products_bulk_update_prices",
        "description": "Bulk update product prices based on pricing strategy",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/dashboard/stats/": {
      "get": {
        "operationId": "product_api_dashboard_dashboard_stats",
        "description": "Get dashboard statistics",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/export/price-history/csv/": {
      "get": {
        "operationId": "product_api_export_price-history_export_csv",
        "description": "Price change history tracking",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceChangeHistory"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/export/products/csv/": {
      "get": {
        "operationId": "product_api_export_products_export_csv",
        "description": "Export data to CSV",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/export/variants/csv/": {
      "get": {
        "operationId": "product_api_export_variants_export_csv",
        "description": "Enhanced variant viewset with POS integration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductVariant"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/management/attachments/{id}/set-primary/": {
      "post": {
        "operationId": "product_api_management_attachments_set_primary",
        "description": "Set this attachment as primary",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this attachment.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/attribute-values/{id}/toggle-active/": {
      "post": {
        "operationId": "product_api_management_attribute-values_toggle_active",
        "description": "Toggle active status",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttributeValue"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Attribute Value.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/management/attributes/variant-attributes/": {
      "get": {
        "operationId": "product_api_management_attributes_variant_attributes",
        "description": "Get attributes used for creating variants",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductAttribute"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/management/attributes/{id}/add-value/": {
      "post": {
        "operationId": "product_api_management_attributes_add_value",
        "description": "Add a new value to an attribute",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Product Attribute.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/management/attributes/{id}/values/": {
      "get": {
        "operationId": "product_api_management_attributes_values",
        "description": "Get all values for an attribute",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Product Attribute.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/management/price-history/pending/": {
      "get": {
        "operationId": "product_api_management_price-history_pending_approvals",
        "description": "Get price changes pending approval",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceChangeHistory"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/management/price-history/recent/": {
      "get": {
        "operationId": "product_api_management_price-history_recent_changes",
        "description": "Get recent price changes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceChangeHistory"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/management/price-history/{id}/approve/": {
      "post": {
        "operationId": "product_api_management_price-history_approve",
        "description": "Approve a price change",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceChangeHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PriceChangeHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Price Change History.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/management/price-history/{id}/reject/": {
      "post": {
        "operationId": "product_api_management_price-history_reject",
        "description": "Reject a price change",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceChangeHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PriceChangeHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Price Change History.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/management/pricing-rules/active/": {
      "get": {
        "operationId": "product_api_management_pricing-rules_active_rules",
        "description": "Get currently active rules",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PricingRule"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/management/pricing-rules/calculate-discount/": {
      "post": {
        "operationId": "product_api_management_pricing-rules_calculate_discount",
        "description": "Calculate discount for given parameters",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/management/pricing-rules/{id}/toggle-active/": {
      "post": {
        "operationId": "product_api_management_pricing-rules_toggle_active",
        "description": "Toggle rule active status",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Rule.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/management/pricing-strategies/active/": {
      "get": {
        "operationId": "product_api_management_pricing-strategies_active_strategies",
        "description": "Get all active pricing strategies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PricingStrategy"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/management/pricing-strategies/{id}/calculate-price/": {
      "post": {
        "operationId": "product_api_management_pricing-strategies_calculate_price",
        "description": "Calculate price for given cost and quantity",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Strategy.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/management/products/{id}/analytics/": {
      "get": {
        "operationId": "product_api_management_products_analytics",
        "description": "Get product analytics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/products/{id}/featured-variants/": {
      "get": {
        "operationId": "product_api_management_products_featured_variants",
        "description": "Get featured variant for a product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/products/{id}/pos-variants/": {
      "get": {
        "operationId": "product_api_management_products_pos_variants",
        "description": "Get POS-ready variants for a product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/products/{id}/price-history/": {
      "get": {
        "operationId": "product_api_management_products_price_history",
        "description": "Get price change history for a product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/products/{id}/toggle-featured/": {
      "post": {
        "operationId": "product_api_management_products_toggle_featured",
        "description": "Toggle featured status",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/products/{id}/toggle-quick-sale/": {
      "post": {
        "operationId": "product_api_management_products_toggle_quick_sale",
        "description": "Toggle quick sale status",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/products/{id}/variants/": {
      "get": {
        "operationId": "product_api_management_products_variants",
        "description": "Get all variants for a product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/purchase-history/current/": {
      "get": {
        "operationId": "product_api_management_purchase-history_current_prices",
        "description": "Get current purchase prices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchasePriceHistory"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/management/purchase-history/{id}/end-period/": {
      "post": {
        "operationId": "product_api_management_purchase-history_end_price_period",
        "description": "End the current price period",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Purchase Price History.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/management/variants/{id}/stock-history/": {
      "get": {
        "operationId": "product_api_management_variants_stock_history",
        "description": "Get stock history for a variant",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/variants/{id}/toggle-featured/": {
      "post": {
        "operationId": "product_api_management_variants_toggle_featured",
        "description": "Toggle the featured status of a variant",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/variants/{id}/toggle-pos-visible/": {
      "post": {
        "operationId": "product_api_management_variants_toggle_pos_visible",
        "description": "Toggle POS visibility",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/management/variants/{id}/update-stock/": {
      "post": {
        "operationId": "product_api_management_variants_update_stock",
        "description": "Update stock quantity (proxy to inventory service)",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/pos-config/": {
      "get": {
        "operationId": "product_api_pos-config_list",
        "description": "POS configuration management",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSConfiguration"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_pos-config_create",
        "description": "POS configuration management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos-config/current/": {
      "get": {
        "operationId": "product_api_pos-config_current",
        "description": "Get current POS configuration",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSConfiguration"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos-config/export_csv/": {
      "get": {
        "operationId": "product_api_pos-config_export_csv",
        "description": "Export data to CSV",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSConfiguration"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos-config/generate_barcode/": {
      "get": {
        "operationId": "product_api_pos-config_generate_barcode",
        "description": "Generate next barcode",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSConfiguration"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos-config/update_current/": {
      "post": {
        "operationId": "product_api_pos-config_update_current",
        "description": "Update current POS configuration",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos-config/{id}/": {
      "get": {
        "operationId": "product_api_pos-config_read",
        "description": "POS configuration management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "put": {
        "operationId": "product_api_pos-config_update",
        "description": "POS configuration management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "patch": {
        "operationId": "product_api_pos-config_partial_update",
        "description": "POS configuration management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "delete": {
        "operationId": "product_api_pos-config_delete",
        "description": "POS configuration management",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/pos/config/": {
      "get": {
        "operationId": "product_api_pos_config_read",
        "description": "Get current POS configuration",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSConfiguration"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_pos_config_create",
        "description": "Update current POS configuration",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/POSConfiguration"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos/config/barcode/": {
      "get": {
        "operationId": "product_api_pos_config_generate_barcode",
        "description": "Generate next barcode",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSConfiguration"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos/products/": {
      "get": {
        "operationId": "product_api_pos_pos_products",
        "description": "Get products optimized for POS display",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSProduct"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos/products/categories/": {
      "get": {
        "operationId": "product_api_pos_products_pos_categories",
        "description": "Enhanced product viewset with POS integration",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos/products/featured/": {
      "get": {
        "operationId": "product_api_pos_products_pos_featured",
        "description": "Get featured products for POS",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSProduct"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos/products/search/": {
      "get": {
        "operationId": "product_api_pos_products_pos_search",
        "description": "Search products by barcode or name for POS",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSProduct"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos/variants/": {
      "get": {
        "operationId": "product_api_pos_pos_list",
        "description": "Get POS-optimized variant list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSVariant"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos/variants/barcode/": {
      "get": {
        "operationId": "product_api_pos_variants_by_barcode",
        "description": "Find variant by barcode",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSVariant"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pos/variants/search/": {
      "get": {
        "operationId": "product_api_pos_variants_pos_search",
        "description": "Search variants for POS",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSVariant"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/price-history/": {
      "get": {
        "operationId": "product_api_price-history_list",
        "description": "Price change history tracking",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceChangeHistory"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/price-history/pending_approvals/": {
      "get": {
        "operationId": "product_api_price-history_pending_approvals",
        "description": "Get price changes pending approval",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceChangeHistory"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/price-history/recent_changes/": {
      "get": {
        "operationId": "product_api_price-history_recent_changes",
        "description": "Get recent price changes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceChangeHistory"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/price-history/{id}/": {
      "get": {
        "operationId": "product_api_price-history_read",
        "description": "Price change history tracking",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PriceChangeHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Price Change History.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/price-history/{id}/approve/": {
      "post": {
        "operationId": "product_api_price-history_approve",
        "description": "Approve a price change",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceChangeHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PriceChangeHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Price Change History.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/price-history/{id}/reject/": {
      "post": {
        "operationId": "product_api_price-history_reject",
        "description": "Reject a price change",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceChangeHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PriceChangeHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Price Change History.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/pricing-rules/": {
      "get": {
        "operationId": "product_api_pricing-rules_list",
        "description": "Pricing rule management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PricingRule"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_pricing-rules_create",
        "description": "Pricing rule management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pricing-rules/active_rules/": {
      "get": {
        "operationId": "product_api_pricing-rules_active_rules",
        "description": "Get currently active rules",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PricingRule"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pricing-rules/calculate_discount/": {
      "post": {
        "operationId": "product_api_pricing-rules_calculate_discount",
        "description": "Calculate discount for given parameters",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pricing-rules/{id}/": {
      "get": {
        "operationId": "product_api_pricing-rules_read",
        "description": "Pricing rule management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "put": {
        "operationId": "product_api_pricing-rules_update",
        "description": "Pricing rule management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "patch": {
        "operationId": "product_api_pricing-rules_partial_update",
        "description": "Pricing rule management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "delete": {
        "operationId": "product_api_pricing-rules_delete",
        "description": "Pricing rule management",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Rule.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/pricing-rules/{id}/toggle_active/": {
      "post": {
        "operationId": "product_api_pricing-rules_toggle_active",
        "description": "Toggle rule active status",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingRule"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Rule.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/pricing-strategies/": {
      "get": {
        "operationId": "product_api_pricing-strategies_list",
        "description": "Pricing strategy management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PricingStrategy"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_pricing-strategies_create",
        "description": "Pricing strategy management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pricing-strategies/active_strategies/": {
      "get": {
        "operationId": "product_api_pricing-strategies_active_strategies",
        "description": "Get all active pricing strategies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PricingStrategy"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/pricing-strategies/{id}/": {
      "get": {
        "operationId": "product_api_pricing-strategies_read",
        "description": "Pricing strategy management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "put": {
        "operationId": "product_api_pricing-strategies_update",
        "description": "Pricing strategy management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "patch": {
        "operationId": "product_api_pricing-strategies_partial_update",
        "description": "Pricing strategy management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "delete": {
        "operationId": "product_api_pricing-strategies_delete",
        "description": "Pricing strategy management",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Strategy.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/pricing-strategies/{id}/calculate_price/": {
      "post": {
        "operationId": "product_api_pricing-strategies_calculate_price",
        "description": "Calculate price for given cost and quantity",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PricingStrategy"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Pricing Strategy.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/products/": {
      "get": {
        "operationId": "product_api_products_list",
        "description": "Enhanced product viewset with POS integration",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductList"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_products_create",
        "description": "Enhanced product viewset with POS integration",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/ai_bulk_create/": {
      "post": {
        "operationId": "product_api_products_ai_bulk_create",
        "description": "Trigger AI-driven bulk product creation",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/bulk_pos_update/": {
      "post": {
        "operationId": "product_api_products_bulk_pos_update",
        "description": "Bulk update POS settings",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/bulk_task_status/": {
      "get": {
        "operationId": "product_api_products_bulk_task_status",
        "description": "Get status of bulk creation tasks",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/bulk_update_prices/": {
      "post": {
        "operationId": "product_api_products_bulk_update_prices",
        "description": "Bulk update product prices based on pricing strategy",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/dashboard_stats/": {
      "get": {
        "operationId": "product_api_products_dashboard_stats",
        "description": "Get dashboard statistics",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/export_csv/": {
      "get": {
        "operationId": "product_api_products_export_csv",
        "description": "Export data to CSV",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/pos_featured/": {
      "get": {
        "operationId": "product_api_products_pos_featured",
        "description": "Get featured products for POS",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSProduct"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/pos_products/": {
      "get": {
        "operationId": "product_api_products_pos_products",
        "description": "Get products optimized for POS display",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSProduct"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/pos_search/": {
      "get": {
        "operationId": "product_api_products_pos_search",
        "description": "Search products by barcode or name for POS",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSProduct"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/product_categories/": {
      "get": {
        "operationId": "product_api_products_product_categories",
        "description": "Get all product categories with product counts",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/products/{id}/": {
      "get": {
        "operationId": "product_api_products_read",
        "description": "Enhanced product viewset with POS integration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "put": {
        "operationId": "product_api_products_update",
        "description": "Enhanced product viewset with POS integration",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "patch": {
        "operationId": "product_api_products_partial_update",
        "description": "Enhanced product viewset with POS integration",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "delete": {
        "operationId": "product_api_products_delete",
        "description": "Enhanced product viewset with POS integration",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/analytics/": {
      "get": {
        "operationId": "product_api_products_analytics",
        "description": "Get product analytics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/attribute_links/": {
      "get": {
        "operationId": "product_api_products_attribute_links",
        "description": "List all attribute links for a product, excluding those already assigned to a variant",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/create_attribute_link/": {
      "post": {
        "operationId": "product_api_products_create_attribute_link",
        "description": "Create a new attribute link for a product",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/create_stock_items/": {
      "post": {
        "operationId": "product_api_products_create_stock_items",
        "description": "Create a new stock items for variants",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/delete_attribute_link/": {
      "delete": {
        "operationId": "product_api_products_delete_attribute_link",
        "description": "Delete an attribute link",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/featured_variants/": {
      "get": {
        "operationId": "product_api_products_featured_variants",
        "description": "Get featured variant for a product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/minimal_product/": {
      "get": {
        "operationId": "product_api_products_minimal_product",
        "description": "Enhanced product viewset with POS integration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/pos_variants/": {
      "get": {
        "operationId": "product_api_products_pos_variants",
        "description": "Get POS-ready variants for a product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/price_history/": {
      "get": {
        "operationId": "product_api_products_price_history",
        "description": "Get price change history for a product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/toggle_featured/": {
      "post": {
        "operationId": "product_api_products_toggle_featured",
        "description": "Toggle featured status",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/toggle_quick_sale/": {
      "post": {
        "operationId": "product_api_products_toggle_quick_sale",
        "description": "Toggle quick sale status",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/update_attribute_link/": {
      "patch": {
        "operationId": "product_api_products_update_attribute_link",
        "description": "Update an existing attribute link",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{id}/variants/": {
      "get": {
        "operationId": "product_api_products_variants",
        "description": "Get all variants for a product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/products/{product_id}/variants/bulk-create/": {
      "post": {
        "operationId": "product_api_products_variants_bulk_create",
        "description": "Bulk create variants for a product",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/product_api/purchase-history/": {
      "get": {
        "operationId": "product_api_purchase-history_list",
        "description": "Purchase price history management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchasePriceHistory"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_purchase-history_create",
        "description": "Purchase price history management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/purchase-history/current_prices/": {
      "get": {
        "operationId": "product_api_purchase-history_current_prices",
        "description": "Get current purchase prices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PurchasePriceHistory"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/purchase-history/{id}/": {
      "get": {
        "operationId": "product_api_purchase-history_read",
        "description": "Purchase price history management",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "put": {
        "operationId": "product_api_purchase-history_update",
        "description": "Purchase price history management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "patch": {
        "operationId": "product_api_purchase-history_partial_update",
        "description": "Purchase price history management",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "delete": {
        "operationId": "product_api_purchase-history_delete",
        "description": "Purchase price history management",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Purchase Price History.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/purchase-history/{id}/end_price_period/": {
      "post": {
        "operationId": "product_api_purchase-history_end_price_period",
        "description": "End the current price period",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchasePriceHistory"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Purchase Price History.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/product_api/variants/": {
      "get": {
        "operationId": "product_api_variants_list",
        "description": "Enhanced variant viewset with POS integration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductVariant"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "post": {
        "operationId": "product_api_variants_create",
        "description": "Enhanced variant viewset with POS integration",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/variants/bulk_create/": {
      "post": {
        "operationId": "product_api_variants_bulk_create",
        "description": "Bulk create variants for a product",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/variants/by_barcode/": {
      "get": {
        "operationId": "product_api_variants_by_barcode",
        "description": "Find variant by barcode",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSVariant"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/variants/pos_list/": {
      "get": {
        "operationId": "product_api_variants_pos_list",
        "description": "Get POS-optimized variant list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSVariant"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/variants/pos_search/": {
      "get": {
        "operationId": "product_api_variants_pos_search",
        "description": "Search variants for POS",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POSVariant"
              }
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": []
    },
    "/product_api/variants/{id}/": {
      "get": {
        "operationId": "product_api_variants_read",
        "description": "Enhanced variant viewset with POS integration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "put": {
        "operationId": "product_api_variants_update",
        "description": "Enhanced variant viewset with POS integration",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "patch": {
        "operationId": "product_api_variants_partial_update",
        "description": "Enhanced variant viewset with POS integration",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "delete": {
        "operationId": "product_api_variants_delete",
        "description": "Enhanced variant viewset with POS integration",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/add_attribute/": {
      "post": {
        "operationId": "product_api_variants_add_attribute",
        "description": "Add or update a variant attribute, handling custom values",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/add_media/": {
      "post": {
        "operationId": "product_api_variants_add_media",
        "description": "Add a media attachment to a variant",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/edit_attribute/": {
      "post": {
        "operationId": "product_api_variants_edit_attribute",
        "description": "Edit a variant attribute",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/list_media/": {
      "get": {
        "operationId": "product_api_variants_list_media",
        "description": "List all media attachments for a variant",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/media/": {
      "get": {
        "operationId": "product_api_variants_media",
        "description": "Fetch all media attachments for a specific product variant",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/remove_attribute/": {
      "post": {
        "operationId": "product_api_variants_remove_attribute",
        "description": "Remove a variant attribute",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/remove_media/": {
      "post": {
        "operationId": "product_api_variants_remove_media",
        "description": "Remove a media attachment from a variant",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/statistics/": {
      "get": {
        "operationId": "product_api_variants_statistics",
        "description": "Get statistics for a variant (stock, sales, price history)",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/stock_history/": {
      "get": {
        "operationId": "product_api_variants_stock_history",
        "description": "Get stock history for a variant",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/toggle_featured/": {
      "post": {
        "operationId": "product_api_variants_toggle_featured",
        "description": "Toggle the featured status of a variant",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/toggle_pos_visible/": {
      "post": {
        "operationId": "product_api_variants_toggle_pos_visible",
        "description": "Toggle POS visibility",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/product_api/variants/{id}/update_stock/": {
      "post": {
        "operationId": "product_api_variants_update_stock",
        "description": "Update stock quantity (proxy to inventory service)",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductVariant"
            }
          }
        },
        "tags": [
          "product_api"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier for the model instance.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    }
  },
  "definitions": {
    "POSProduct": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "Unique identifier for the model instance.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Product Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "base_price": {
          "title": "Base Price",
          "description": "Default selling price before modifiers",
          "type": "string",
          "format": "decimal"
        },
        "pos_price": {
          "title": "Pos price",
          "type": "string",
          "readOnly": true
        },
        "barcode": {
          "title": "Barcode",
          "description": "Product barcode for POS scanning",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "sku": {
          "title": "SKU",
          "description": "Stock Keeping Unit",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "effective_barcode": {
          "title": "Effective barcode",
          "type": "string",
          "readOnly": true
        },
        "quick_sale": {
          "title": "Quick Sale",
          "description": "Enable for quick POS access",
          "type": "boolean"
        },
        "pos_category": {
          "title": "POS Category",
          "description": "Category for POS display grouping",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "tax_rate": {
          "title": "Tax Rate %",
          "description": "Default tax rate percentage",
          "type": "string",
          "format": "decimal"
        },
        "tax_inclusive": {
          "title": "Tax Inclusive",
          "description": "Is the base price tax inclusive?",
          "type": "boolean"
        },
        "allow_discount": {
          "title": "Allow Discount",
          "description": "Allow discounts in POS",
          "type": "boolean"
        },
        "max_discount_percent": {
          "title": "Max Discount %",
          "description": "Maximum discount percentage allowed",
          "type": "string",
          "format": "decimal"
        },
        "stock_quantity": {
          "title": "Stock quantity",
          "type": "string",
          "readOnly": true
        },
        "can_sell": {
          "title": "Can sell",
          "type": "string",
          "readOnly": true
        },
        "profit_margin": {
          "title": "Profit margin",
          "type": "string",
          "readOnly": true
        },
        "unit": {
          "title": "Unit of Measure",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "featured_variant": {
          "title": "Featured variant",
          "type": "string",
          "readOnly": true
        },
        "main_image": {
          "title": "Main image",
          "type": "string",
          "readOnly": true
        },
        "category_info": {
          "title": "Category info",
          "type": "string",
          "readOnly": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        }
      }
    },
    "POSVariant": {
      "required": [
        "product"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "Unique identifier for the model instance.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "product": {
          "title": "Parent Product",
          "type": "string",
          "format": "uuid"
        },
        "product_name": {
          "title": "Product name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "product_category": {
          "title": "Product category",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "effective_barcode": {
          "title": "Effective barcode",
          "type": "string",
          "readOnly": true
        },
        "selling_price": {
          "title": "Selling price",
          "type": "string",
          "readOnly": true
        },
        "pos_price": {
          "title": "Pos price",
          "type": "string",
          "readOnly": true
        },
        "active": {
          "title": "Active",
          "description": "Available for sale",
          "type": "boolean"
        },
        "pos_visible": {
          "title": "POS Visible",
          "description": "Show in POS interface",
          "type": "boolean"
        },
        "is_featured": {
          "title": "Featured",
          "description": "Feature for product",
          "type": "boolean"
        },
        "stock_info": {
          "title": "Stock info",
          "type": "string",
          "readOnly": true
        },
        "attributes_display": {
          "title": "Attributes display",
          "type": "string",
          "readOnly": true
        },
        "main_image": {
          "title": "Main image",
          "type": "string",
          "readOnly": true
        },
        "pos_display_name": {
          "title": "Pos display name",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PricingRule": {
      "required": [
        "name",
        "rule_type",
        "value"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Rule Name",
          "description": "Descriptive name for this pricing rule",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "rule_type": {
          "title": "Rule type",
          "type": "string",
          "enum": [
            "BATCH",
            "CUSTOMER",
            "CUSTOMER_GROUP",
            "PROMO",
            "VOLUME",
            "SEASONAL",
            "CLEARANCE",
            "LOYALTY",
            "BUNDLE"
          ]
        },
        "product": {
          "title": "Product",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "product_details": {
          "title": "Product details",
          "type": "string",
          "readOnly": true
        },
        "variant": {
          "title": "Variant",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "variant_details": {
          "$ref": "#/definitions/POSVariant"
        },
        "category": {
          "title": "Category",
          "description": "Category to which this rule applies",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "discount_type": {
          "title": "Discount type",
          "type": "string",
          "enum": [
            "PERCENTAGE",
            "FIXED_AMOUNT",
            "FIXED_PRICE"
          ]
        },
        "value": {
          "title": "Discount Value",
          "type": "string",
          "format": "decimal"
        },
        "start_date": {
          "title": "Start Date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "end_date": {
          "title": "End Date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "min_quantity": {
          "title": "Minimum Quantity",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "max_quantity": {
          "title": "Maximum Quantity",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "min_amount": {
          "title": "Minimum Amount",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "customer_groups": {
          "title": "Customer Groups",
          "description": "Comma-separated list of customer group IDs",
          "type": "string",
          "maxLength": 500
        },
        "specific_customers": {
          "title": "Specific Customers",
          "description": "Comma-separated list of customer IDs",
          "type": "string",
          "maxLength": 1000
        },
        "usage_limit": {
          "title": "Usage Limit",
          "description": "Maximum number of times this rule can be used",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "usage_count": {
          "title": "Usage Count",
          "description": "Number of times this rule has been used",
          "type": "integer",
          "readOnly": true
        },
        "usage_limit_per_customer": {
          "title": "Usage Limit Per Customer",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "priority": {
          "title": "Priority",
          "description": "Higher numbers have higher priority",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "created_by": {
          "title": "Created by",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "created_by_details": {
          "title": "Created by details",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "is_active_now": {
          "title": "Is active now",
          "type": "string",
          "readOnly": true
        },
        "usage_percentage": {
          "title": "Usage percentage",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PricingStrategy": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Strategy Name",
          "description": "Descriptive name for this pricing strategy",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "strategy": {
          "title": "Strategy",
          "type": "string",
          "enum": [
            "margin",
            "multiplier",
            "fixed",
            "dynamic",
            "tiered"
          ]
        },
        "margin_percentage": {
          "title": "Margin %",
          "description": "Markup percentage (e.g. 30 for 30% margin)",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "market_multiplier": {
          "title": "Multiplier",
          "description": "Multiply cost price by this value",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "min_price": {
          "title": "Minimum Price",
          "description": "Price floor for automatic calculations",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "max_price": {
          "title": "Maximum Price",
          "description": "Price ceiling for automatic calculations",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "demand_factor": {
          "title": "Demand Factor",
          "description": "Multiplier based on demand",
          "type": "string",
          "format": "decimal"
        },
        "seasonal_factor": {
          "title": "Seasonal Factor",
          "description": "Seasonal price adjustment",
          "type": "string",
          "format": "decimal"
        },
        "tier_1_quantity": {
          "title": "Tier 1 Quantity",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "tier_1_discount": {
          "title": "Tier 1 Discount %",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "tier_2_quantity": {
          "title": "Tier 2 Quantity",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "tier_2_discount": {
          "title": "Tier 2 Discount %",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "tier_3_quantity": {
          "title": "Tier 3 Quantity",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "tier_3_discount": {
          "title": "Tier 3 Discount %",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "calculated_price_example": {
          "title": "Calculated price example",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ProductAttributeValue": {
      "required": [
        "attribute",
        "value"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "attribute": {
          "title": "Attribute",
          "type": "integer"
        },
        "attribute_name": {
          "title": "Attribute name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "attribute_type": {
          "title": "Attribute type",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "value": {
          "title": "Value",
          "description": "Specific attribute value (e.g. Red, 42)",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "display_value": {
          "title": "Display value",
          "description": "Display value for UI (optional)",
          "type": "string",
          "maxLength": 100
        },
        "effective_display_value": {
          "title": "Effective display value",
          "type": "string",
          "readOnly": true
        },
        "color_code": {
          "title": "Color code",
          "description": "Hex color code for color attributes",
          "type": "string",
          "maxLength": 7
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "sort_order": {
          "title": "Sort Order",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        }
      }
    },
    "ProductAttribute": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "description": "Attribute name (e.g. Color, Size)",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "attribute_type": {
          "title": "Attribute Type",
          "type": "string",
          "enum": [
            "TEXT",
            "NUMBER",
            "BOOLEAN",
            "DATE",
            "COLOR",
            "SIZE",
            "WEIGHT",
            "DIMENSION"
          ]
        },
        "is_required": {
          "title": "Required",
          "description": "Is this attribute required for all products?",
          "type": "boolean"
        },
        "is_variant_attribute": {
          "title": "Variant Attribute",
          "description": "Used to create product variants",
          "type": "boolean"
        },
        "display_order": {
          "title": "Display Order",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "unit": {
          "title": "Unit",
          "description": "Unit of measurement (e.g., cm, kg, inches)",
          "type": "string",
          "maxLength": 50
        },
        "values_count": {
          "title": "Values count",
          "type": "string",
          "readOnly": true
        },
        "values": {
          "title": "Values",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Attachment": {
      "required": [
        "file_type",
        "uploaded_by",
        "content_type",
        "object_id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "file": {
          "title": "File",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "file_url": {
          "title": "File url",
          "type": "string",
          "readOnly": true
        },
        "file_type": {
          "title": "File type",
          "type": "string",
          "enum": [
            "IMAGE",
            "VIDEO",
            "DOCUMENT",
            "EXCEL",
            "PDF"
          ]
        },
        "purpose": {
          "title": "Purpose",
          "type": "string",
          "enum": [
            "MAIN_IMAGE",
            "GALLERY",
            "THUMBNAIL",
            "BULK_INPUT",
            "BULK_REPORT"
          ]
        },
        "is_primary": {
          "title": "Is primary",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "uploaded_by": {
          "title": "Uploaded by",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "uploaded_by_details": {
          "title": "Uploaded by details",
          "type": "string",
          "readOnly": true
        },
        "uploaded_at": {
          "title": "Uploaded at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "file_size": {
          "title": "File size",
          "type": "integer",
          "readOnly": true,
          "x-nullable": true
        },
        "file_size_formatted": {
          "title": "File size formatted",
          "type": "string",
          "readOnly": true
        },
        "mime_type": {
          "title": "Mime type",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "content_type": {
          "title": "Content type",
          "type": "integer"
        },
        "object_id": {
          "title": "Object id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "ProductVariant": {
      "required": [
        "product"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "Unique identifier for the model instance.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "product": {
          "title": "Parent Product",
          "type": "string",
          "format": "uuid"
        },
        "product_details": {
          "title": "Product details",
          "type": "string",
          "readOnly": true
        },
        "variant_barcode": {
          "title": "Variant Barcode",
          "description": "Specific barcode for this variant",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "variant_sku": {
          "title": "Variant SKU",
          "description": "Specific SKU for this variant",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "pos_name": {
          "title": "POS Display Name",
          "description": "Custom name for POS display",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "variant_number": {
          "title": "Variant Sequence",
          "type": "integer",
          "readOnly": true
        },
        "active": {
          "title": "Active",
          "description": "Available for sale",
          "type": "boolean"
        },
        "is_featured": {
          "title": "Featured",
          "description": "Feature for product",
          "type": "boolean"
        },
        "pos_visible": {
          "title": "POS Visible",
          "description": "Show in POS interface",
          "type": "boolean"
        },
        "price_override": {
          "title": "Price Override",
          "description": "Override product base price",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "cost_override": {
          "title": "Cost Override",
          "description": "Override product cost price",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "weight_override": {
          "title": "Weight Override",
          "description": "Override product weight",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "dimensions_override": {
          "title": "Dimensions Override",
          "description": "Override product dimensions",
          "type": "string",
          "maxLength": 100
        },
        "track_stock_override": {
          "title": "Track Stock Override",
          "description": "Override product stock tracking setting",
          "type": "boolean",
          "x-nullable": true
        },
        "low_stock_threshold_override": {
          "title": "Low Stock Threshold Override",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "readOnly": true
        },
        "main_image": {
          "title": "Main image",
          "type": "string",
          "readOnly": true
        },
        "stock_details": {
          "title": "Stock details",
          "type": "string",
          "readOnly": true
        },
        "attribute_details": {
          "title": "Attribute details",
          "type": "string",
          "readOnly": true
        },
        "selling_price": {
          "title": "Selling price",
          "type": "string",
          "readOnly": true
        },
        "pos_price": {
          "title": "Pos price",
          "type": "string",
          "readOnly": true
        },
        "effective_properties": {
          "title": "Effective properties",
          "type": "string",
          "readOnly": true
        },
        "created_by": {
          "title": "Created By",
          "description": "User who created this model instance.",
          "type": "string",
          "maxLength": 400,
          "x-nullable": true
        },
        "created_by_details": {
          "title": "Created by details",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created At",
          "description": "Timestamp when this model instance was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated At",
          "description": "Timestamp when this model instance was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "pos_display_name": {
          "title": "Pos display name",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProductCreate": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "profile": {
          "title": "Profile",
          "description": "Profile of the user or entity associated with this model.",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "inventory": {
          "title": "Inventory ID",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "name": {
          "title": "Product Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "short_description": {
          "title": "Short Description",
          "description": "Brief description for listings",
          "type": "string",
          "maxLength": 500
        },
        "base_price": {
          "title": "Base Price",
          "description": "Default selling price before modifiers",
          "type": "string",
          "format": "decimal"
        },
        "cost_price": {
          "title": "Cost Price",
          "description": "Average cost price for margin calculations",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "sku": {
          "title": "SKU",
          "description": "Stock Keeping Unit",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "quick_sale": {
          "title": "Quick Sale",
          "description": "Enable for quick POS access",
          "type": "boolean"
        },
        "pos_category": {
          "title": "POS Category",
          "description": "Category for POS display grouping",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "tax_rate": {
          "title": "Tax Rate %",
          "description": "Default tax rate percentage",
          "type": "string",
          "format": "decimal"
        },
        "tax_inclusive": {
          "title": "Tax Inclusive",
          "description": "Is the base price tax inclusive?",
          "type": "boolean"
        },
        "allow_discount": {
          "title": "Allow Discount",
          "description": "Allow discounts in POS",
          "type": "boolean"
        },
        "max_discount_percent": {
          "title": "Max Discount %",
          "description": "Maximum discount percentage allowed",
          "type": "string",
          "format": "decimal"
        },
        "is_template": {
          "title": "Is Template",
          "description": "Designates if this product is a template for variants",
          "type": "boolean"
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "is_featured": {
          "title": "Featured",
          "type": "boolean"
        },
        "unit": {
          "title": "Unit of Measure",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "weight": {
          "title": "Weight",
          "description": "Weight in kg",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "dimensions": {
          "title": "Dimensions",
          "description": "L x W x H in cm",
          "type": "string",
          "maxLength": 100
        },
        "category": {
          "title": "Category",
          "description": "Product category",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "track_stock": {
          "title": "Track Stock",
          "description": "Track inventory for this product",
          "type": "boolean"
        },
        "allow_backorder": {
          "title": "Allow Backorder",
          "description": "Allow sales when out of stock",
          "type": "boolean"
        },
        "low_stock_threshold": {
          "title": "Low Stock Threshold",
          "description": "Alert when stock falls below this level",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "meta_title": {
          "title": "Meta title",
          "type": "string",
          "maxLength": 200
        },
        "meta_description": {
          "title": "Meta description",
          "type": "string"
        },
        "launch_date": {
          "title": "Launch Date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "discontinue_date": {
          "title": "Discontinue Date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "ProductAttributeLink": {
      "required": [
        "product",
        "attribute"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "string",
          "format": "uuid"
        },
        "attribute": {
          "title": "Attribute",
          "type": "integer"
        },
        "attribute_name": {
          "title": "Attribute name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "attribute_type": {
          "title": "Attribute type",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "attribute_details": {
          "$ref": "#/definitions/ProductAttribute"
        },
        "required": {
          "title": "Required",
          "description": "Is this attribute required for variants?",
          "type": "boolean"
        },
        "order": {
          "title": "Ordering Priority",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "default_modifier": {
          "title": "Price Modifier",
          "description": "Default price adjustment for this attribute",
          "type": "string",
          "format": "decimal"
        },
        "is_visible_in_pos": {
          "title": "Visible in POS",
          "description": "Show this attribute in POS interface",
          "type": "boolean"
        },
        "attribute_options": {
          "title": "Attribute options",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Product": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "Unique identifier for the model instance.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "title": "Product Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "inventory": {
          "title": "Inventory ID",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "short_description": {
          "title": "Short Description",
          "description": "Brief description for listings",
          "type": "string",
          "maxLength": 500
        },
        "base_price": {
          "title": "Base Price",
          "description": "Default selling price before modifiers",
          "type": "string",
          "format": "decimal"
        },
        "cost_price": {
          "title": "Cost Price",
          "description": "Average cost price for margin calculations",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "barcode": {
          "title": "Barcode",
          "description": "Product barcode for POS scanning",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "sku": {
          "title": "SKU",
          "description": "Stock Keeping Unit",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "quick_sale": {
          "title": "Quick Sale",
          "description": "Enable for quick POS access",
          "type": "boolean"
        },
        "pos_category": {
          "title": "POS Category",
          "description": "Category for POS display grouping",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "tax_rate": {
          "title": "Tax Rate %",
          "description": "Default tax rate percentage",
          "type": "string",
          "format": "decimal"
        },
        "tax_inclusive": {
          "title": "Tax Inclusive",
          "description": "Is the base price tax inclusive?",
          "type": "boolean"
        },
        "allow_discount": {
          "title": "Allow Discount",
          "description": "Allow discounts in POS",
          "type": "boolean"
        },
        "max_discount_percent": {
          "title": "Max Discount %",
          "description": "Maximum discount percentage allowed",
          "type": "string",
          "format": "decimal"
        },
        "is_template": {
          "title": "Is Template",
          "description": "Designates if this product is a template for variants",
          "type": "boolean"
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "is_featured": {
          "title": "Featured",
          "type": "boolean"
        },
        "unit": {
          "title": "Unit of Measure",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "weight": {
          "title": "Weight",
          "description": "Weight in kg",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "dimensions": {
          "title": "Dimensions",
          "description": "L x W x H in cm",
          "type": "string",
          "maxLength": 100
        },
        "category": {
          "title": "Category",
          "description": "Product category",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "pricing_strategy_details": {
          "$ref": "#/definitions/PricingStrategy"
        },
        "track_stock": {
          "title": "Track Stock",
          "description": "Track inventory for this product",
          "type": "boolean"
        },
        "allow_backorder": {
          "title": "Allow Backorder",
          "description": "Allow sales when out of stock",
          "type": "boolean"
        },
        "low_stock_threshold": {
          "title": "Low Stock Threshold",
          "description": "Alert when stock falls below this level",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "meta_title": {
          "title": "Meta title",
          "type": "string",
          "maxLength": 200
        },
        "meta_description": {
          "title": "Meta description",
          "type": "string"
        },
        "launch_date": {
          "title": "Launch Date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "discontinue_date": {
          "title": "Discontinue Date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "display_image": {
          "title": "Display image",
          "type": "string",
          "readOnly": true
        },
        "variant_count": {
          "title": "Variant count",
          "type": "string",
          "readOnly": true
        },
        "total_stock": {
          "title": "Total stock",
          "type": "string",
          "readOnly": true
        },
        "profit_margin": {
          "title": "Profit margin",
          "type": "string",
          "readOnly": true
        },
        "pos_ready": {
          "title": "Pos ready",
          "type": "string",
          "readOnly": true
        },
        "quick_sale_variants": {
          "title": "Quick sale variants",
          "type": "string",
          "readOnly": true
        },
        "attribute_links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductAttributeLink"
          },
          "readOnly": true
        },
        "price_range": {
          "title": "Price range",
          "type": "string",
          "readOnly": true
        },
        "average_cost": {
          "title": "Average cost",
          "type": "string",
          "readOnly": true
        },
        "low_stock_variants": {
          "title": "Low stock variants",
          "type": "string",
          "readOnly": true
        },
        "out_of_stock_variants": {
          "title": "Out of stock variants",
          "type": "string",
          "readOnly": true
        },
        "created_by": {
          "title": "Created By",
          "description": "User ID of the creator",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "created_by_details": {
          "title": "Created by details",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created At",
          "description": "Timestamp when this model instance was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated At",
          "description": "Timestamp when this model instance was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "PriceChangeHistory": {
      "required": [
        "product",
        "old_price",
        "new_price",
        "change_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "string",
          "format": "uuid"
        },
        "product_name": {
          "title": "Product name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "variant": {
          "title": "Variant",
          "description": "Specific variant if price change is variant-specific",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "variant_name": {
          "title": "Variant name",
          "type": "string",
          "readOnly": true
        },
        "old_price": {
          "title": "Previous Price",
          "type": "string",
          "format": "decimal"
        },
        "new_price": {
          "title": "New Price",
          "type": "string",
          "format": "decimal"
        },
        "price_difference": {
          "title": "Price Difference",
          "description": "Absolute difference between old and new price",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "percentage_change": {
          "title": "Percentage Change",
          "description": "Percentage change in price",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "price_difference_formatted": {
          "title": "Price difference formatted",
          "type": "string",
          "readOnly": true
        },
        "changed_by": {
          "title": "Changed by",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "changed_by_details": {
          "title": "Changed by details",
          "type": "string",
          "readOnly": true
        },
        "change_type": {
          "title": "Change Type",
          "type": "string",
          "enum": [
            "auto",
            "manual",
            "override",
            "bulk",
            "strategy"
          ]
        },
        "status": {
          "title": "Approval Status",
          "type": "string",
          "enum": [
            "pending",
            "approved",
            "rejected",
            "auto_approved"
          ]
        },
        "timestamp": {
          "title": "Timestamp",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "reason": {
          "title": "Change Reason",
          "type": "string"
        },
        "approved_by": {
          "title": "Approved By",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "approved_by_details": {
          "title": "Approved by details",
          "type": "string",
          "readOnly": true
        },
        "approved_at": {
          "title": "Approved At",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "PurchasePriceHistory": {
      "required": [
        "variant",
        "purchase_price",
        "purchase_order_source"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "variant": {
          "title": "Variant",
          "type": "string",
          "format": "uuid"
        },
        "variant_name": {
          "title": "Variant name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "product_name": {
          "title": "Product name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "purchase_price": {
          "title": "Unit Cost",
          "type": "string",
          "format": "decimal"
        },
        "effective_start": {
          "title": "Effective Start",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "effective_end": {
          "title": "Effective End",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "is_current": {
          "title": "Is current",
          "type": "string",
          "readOnly": true
        },
        "duration_days": {
          "title": "Duration days",
          "type": "string",
          "readOnly": true
        },
        "purchase_order_source": {
          "title": "Purchase Order Source",
          "description": "Reference to purchase order or source",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "supplier": {
          "title": "Supplier",
          "description": "Supplier name or ID",
          "type": "string",
          "maxLength": 255
        },
        "quantity_purchased": {
          "title": "Quantity Purchased",
          "description": "Quantity purchased at this price",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "maxLength": 3,
          "minLength": 1
        },
        "exchange_rate": {
          "title": "Exchange Rate",
          "type": "string",
          "format": "decimal"
        },
        "notes": {
          "title": "Notes",
          "type": "string"
        }
      }
    },
    "POSConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "Unique identifier for the model instance.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "default_tax_rate": {
          "title": "Default Tax Rate %",
          "type": "string",
          "format": "decimal"
        },
        "tax_inclusive_pricing": {
          "title": "Tax Inclusive Pricing",
          "description": "Display prices with tax included",
          "type": "boolean"
        },
        "allow_negative_stock": {
          "title": "Allow Negative Stock",
          "description": "Allow sales when stock is zero",
          "type": "boolean"
        },
        "show_stock_levels": {
          "title": "Show Stock Levels",
          "description": "Display stock levels in POS",
          "type": "boolean"
        },
        "low_stock_warning": {
          "title": "Low Stock Warning",
          "description": "Show warning for low stock items",
          "type": "boolean"
        },
        "require_barcode": {
          "title": "Require Barcode",
          "description": "Require barcode for all products",
          "type": "boolean"
        },
        "auto_generate_barcode": {
          "title": "Auto Generate Barcode",
          "description": "Automatically generate barcodes for new products",
          "type": "boolean"
        },
        "barcode_prefix": {
          "title": "Barcode Prefix",
          "description": "Prefix for auto-generated barcodes",
          "type": "string",
          "maxLength": 10
        },
        "auto_print_receipt": {
          "title": "Auto Print Receipt",
          "type": "boolean"
        },
        "receipt_header": {
          "title": "Receipt Header",
          "description": "Custom header text for receipts",
          "type": "string"
        },
        "receipt_footer": {
          "title": "Receipt Footer",
          "description": "Custom footer text for receipts",
          "type": "string"
        },
        "allow_item_discount": {
          "title": "Allow Item Discount",
          "description": "Allow discounts on individual items",
          "type": "boolean"
        },
        "allow_transaction_discount": {
          "title": "Allow Transaction Discount",
          "description": "Allow discounts on entire transaction",
          "type": "boolean"
        },
        "max_discount_without_approval": {
          "title": "Max Discount Without Approval %",
          "description": "Maximum discount percentage without manager approval",
          "type": "string",
          "format": "decimal"
        },
        "products_per_page": {
          "title": "Products Per Page",
          "description": "Number of products to display per page in POS",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "show_product_images": {
          "title": "Show Product Images",
          "description": "Display product images in POS",
          "type": "boolean"
        },
        "default_view": {
          "title": "Default View",
          "type": "string",
          "enum": [
            "grid",
            "list"
          ]
        },
        "enable_quick_sale": {
          "title": "Enable Quick Sale",
          "description": "Enable quick sale buttons",
          "type": "boolean"
        },
        "quick_sale_categories": {
          "title": "Quick Sale Categories",
          "description": "Comma-separated list of categories for quick sale",
          "type": "string",
          "maxLength": 500
        },
        "cash_rounding": {
          "title": "Cash Rounding",
          "description": "Round cash payments to nearest amount",
          "type": "string",
          "format": "decimal"
        },
        "enable_loyalty": {
          "title": "Enable Loyalty Program",
          "type": "boolean"
        },
        "loyalty_points_rate": {
          "title": "Loyalty Points Rate",
          "description": "Points earned per currency unit spent",
          "type": "string",
          "format": "decimal"
        },
        "profile": {
          "title": "Profile",
          "description": "Profile of the user or entity associated with this model.",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "created_by": {
          "title": "Created By",
          "description": "User ID of the creator",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "created_by_details": {
          "title": "Created by details",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created At",
          "description": "Timestamp when this model instance was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated At",
          "description": "Timestamp when this model instance was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "next_barcode": {
          "title": "Next barcode",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProductList": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "Unique identifier for the model instance.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "display_image": {
          "title": "Display image",
          "type": "string",
          "readOnly": true
        },
        "variant_count": {
          "title": "Variant count",
          "type": "string",
          "readOnly": true
        },
        "total_stock": {
          "title": "Total stock",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created At",
          "description": "Timestamp when this model instance was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated At",
          "description": "Timestamp when this model instance was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "profile": {
          "title": "Profile",
          "description": "Profile of the user or entity associated with this model.",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "created_by": {
          "title": "Created By",
          "description": "User ID of the creator",
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "x-nullable": true
        },
        "inventory": {
          "title": "Inventory ID",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "name": {
          "title": "Product Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "short_description": {
          "title": "Short Description",
          "description": "Brief description for listings",
          "type": "string",
          "maxLength": 500
        },
        "base_price": {
          "title": "Base Price",
          "description": "Default selling price before modifiers",
          "type": "string",
          "format": "decimal"
        },
        "cost_price": {
          "title": "Cost Price",
          "description": "Average cost price for margin calculations",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "barcode": {
          "title": "Barcode",
          "description": "Product barcode for POS scanning",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "sku": {
          "title": "SKU",
          "description": "Stock Keeping Unit",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "quick_sale": {
          "title": "Quick Sale",
          "description": "Enable for quick POS access",
          "type": "boolean"
        },
        "pos_category": {
          "title": "POS Category",
          "description": "Category for POS display grouping",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "tax_rate": {
          "title": "Tax Rate %",
          "description": "Default tax rate percentage",
          "type": "string",
          "format": "decimal"
        },
        "tax_inclusive": {
          "title": "Tax Inclusive",
          "description": "Is the base price tax inclusive?",
          "type": "boolean"
        },
        "allow_discount": {
          "title": "Allow Discount",
          "description": "Allow discounts in POS",
          "type": "boolean"
        },
        "max_discount_percent": {
          "title": "Max Discount %",
          "description": "Maximum discount percentage allowed",
          "type": "string",
          "format": "decimal"
        },
        "is_template": {
          "title": "Is Template",
          "description": "Designates if this product is a template for variants",
          "type": "boolean"
        },
        "is_active": {
          "title": "Active",
          "type": "boolean"
        },
        "is_featured": {
          "title": "Featured",
          "type": "boolean"
        },
        "unit": {
          "title": "Unit of Measure",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "weight": {
          "title": "Weight",
          "description": "Weight in kg",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "dimensions": {
          "title": "Dimensions",
          "description": "L x W x H in cm",
          "type": "string",
          "maxLength": 100
        },
        "category": {
          "title": "Category",
          "description": "Product category",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "track_stock": {
          "title": "Track Stock",
          "description": "Track inventory for this product",
          "type": "boolean"
        },
        "allow_backorder": {
          "title": "Allow Backorder",
          "description": "Allow sales when out of stock",
          "type": "boolean"
        },
        "low_stock_threshold": {
          "title": "Low Stock Threshold",
          "description": "Alert when stock falls below this level",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "meta_title": {
          "title": "Meta title",
          "type": "string",
          "maxLength": 200
        },
        "meta_description": {
          "title": "Meta description",
          "type": "string"
        },
        "launch_date": {
          "title": "Launch Date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "discontinue_date": {
          "title": "Discontinue Date",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          },
          "readOnly": true,
          "uniqueItems": true
        }
      }
    }
  }
}